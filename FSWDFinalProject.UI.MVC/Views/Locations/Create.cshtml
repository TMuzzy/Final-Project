@model FSWDFinalProject.DATA.EF.Location

@{
    ViewBag.Title = "Add New Location";
}

<div style="padding: 3.5em;"></div>

<div class="container justify-content-center border1" style="margin-bottom: 1.5em;">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <h2 class="text-center" style="padding-top:0.5em;">@ViewBag.Title</h2>
            <div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="row" style="padding-top: 1.5em;">
                    <div class="col-md-4" style="text-align: right;">
                        @Html.LabelFor(model => model.LocationName, htmlAttributes: new { @class = "" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-top: .5em;">
                    <div class="col-md-4" style="text-align: right;">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-top: .5em;">
                    <div class="col-md-4" style="text-align: right;">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-top: .5em;">
                    <div class="col-md-4" style="text-align: right;">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row" style="padding-top: .5em;">
                    <div class="col-md-4" style="text-align: right;">
                        @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row button-styling">
                <div class="col-md-10" style="padding-left: 2.5em;">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
                <div>
                    @Html.ActionLink("Back to List", "Index", "", new { @class = "btn btn-secondary" })
                </div>
            </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}